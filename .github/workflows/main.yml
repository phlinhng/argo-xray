name: Start a tunnel
on:
  workflow_dispatch:

jobs:
  main:
    runs-on: ubuntu-latest
    name: Tunnelling traffic
    timeout-minutes: 60
    steps:
      - name: Checkout branch "runtime"
        uses: actions/checkout@v2.3.4
        with:
          ref: runtime
      - name: Configure
        run: |
          mkdir ./.cloudflared
          echo "${{ secrets.ARGO_TUNNEL_TOKEN }}" > ./.cloudflared/cert.pem
          mkdir ./ssl
          openssl req -new -newkey rsa:2048 -days 365 -nodes -x509 -subj "/C=US/ST=Oregon/L=Portland/O=Company Name/OU=Org/CN=${{ secrets.ARGO_TUNNEL_HOSTNAME }},*.${{ secrets.ARGO_TUNNEL_DOMAIN }}" -keyout ./ssl/xray.key -out ./ssl/xray.crt
          mkdir -p ./etc/xray
          bash 01_inbounds.sh ${{ secrets.XRAY_VLESS_UUID }} ${{ secrets.XRAY_VLESS_WSPATH }} ${{ secrets.ARGO_TUNNEL_HOSTNAME }}
          cat 02_outbounds.json > ./etc/xray/02_outbounds.json
          cat 03_routing.json > ./etc/xray/03_routing.json
      - name: Create tunnel
        run: |
          bash reset-dns.sh  ${{ secrets.ARGO_TUNNEL_DOMAIN }} ${{ secrets.ARGO_TUNNEL_HOSTNAME }}  ${{ secrets.CF_API_KEY }} ${{ secrets.CF_API_EMAIL }}
          ./cloudflared tunnel --origincert ./.cloudflared/cert.pem cleanup argoxray || true
          ./cloudflared tunnel --origincert ./.cloudflared/cert.pem delete -f argoxray || true
          ./cloudflared tunnel --origincert ./.cloudflared/cert.pem create argoxray
          ./cloudflared tunnel --origincert ./.cloudflared/cert.pem route dns argoxray ${{ secrets.ARGO_TUNNEL_HOSTNAME }}
          ./cloudflared tunnel --origincert ./.cloudflared/cert.pem cleanup argoxray || true
      - name: Start server
        run: |
          ./xray run -confdir ./etc/xray &
          ./cloudflared tunnel --origincert ./.cloudflared/cert.pem run --url https://localhost:2083 --http-host-header ${{ secrets.ARGO_TUNNEL_HOSTNAME }} --no-tls-verify argoxray || true
  post:
    runs-on: ubuntu-latest
    name: Closing session
    needs: main
    steps:
      - name: Checkout branch "runtime"
        uses: actions/checkout@v2.3.4
        with:
          ref: runtime
      - name: Configure
        run: |
          mkdir ./.cloudflared
          echo "${{ secrets.ARGO_TUNNEL_TOKEN }}" > ./.cloudflared/cert.pem
      - name: Destory tunnel
        run: |
          bash reset-dns.sh  ${{ secrets.ARGO_TUNNEL_DOMAIN }} ${{ secrets.ARGO_TUNNEL_HOSTNAME }}  ${{ secrets.CF_API_KEY }} ${{ secrets.CF_API_EMAIL }}
          ./cloudflared tunnel --origincert ./.cloudflared/cert.pem cleanup argoxray || true
          ./cloudflared tunnel --origincert ./.cloudflared/cert.pem delete -f argoxray || true